<h1>Snapshots</h1>
<p>
The snapshots section of the API covers all operations which can be affected on the video channel of a stream. Snapshot operations always revolve around the reading or storing a single image (a single frame).
</p>

<h4>GET /v1/streams/{stream}/snapshots/new</h4>
<p>
This operation returns all data required to connect to the stream device, authenticate where nessessary, and retrieve images in whatever formats are currently available. Public streams can be accessed without providing any authentication. Private streams require authentication via any <a href='/docs/api/v1/authentication'>supported method</a> and prior authorization to view it.
</p>
<p>
A typical cURL command to GET the data for any particular private stream would look like this:
</p>


<!-- Nav tabs -->
<ul class="nav nav-pills pull-right">
  <li class="active"><a href="#curl" data-toggle="tab">Curl</a></li>
  <li><a href="#java" data-toggle="tab">Java</a></li>
  <li><a href="#node" data-toggle="tab">Node</a></li>
  <li><a href="#python" data-toggle="tab">Python</a></li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane active" id="curl">
      <pre><code class='bash'>curl -X GET https://api.evercam.io/v1/streams/{stream}/snapshots/new \
  -H 'Authorization: Bearer {token}' </code></pre>
<p>
Assuming your authentication information is verified and you are authorized to view the stream, the server will respond with an <%= code(200) %> status and the stream snapshot data using the following format:
</p>
<pre><code class='json'>{
  "uris":{
    "external": "http://mystic-mountains-1471.evr.cm",
    "internal": "http://192.168.1.123"
  },
  "formats": {
    "jpg": {
      "path": "/streaming/channels/1/picture"
    }
  },
  "auth": {
    "basic": {
      "username": "user1",
      "password": "1d3$35f2#2"
    }
  }
}
</code></pre>
  </div>

  <div class="tab-pane" id="java">
    <pre><code class='java'>import io.evercam.*;
    </code></pre>
  </div>
  <div class="tab-pane" id="node">
    <pre><code class='javascript'>var evercam = require("evercam");
evercam.snapshot.get('teststream',
    function (errors, snapshot) {
      // asynchronously called
    }
);
    </code></pre>

    <p>
    Assuming your authentication information is verified and you are authorized to view the stream, the server will respond with an <%= code(200) %> status and the stream snapshot data using the following format:
    </p>
    <pre><code class='json'>
{
  "uris":{
    "external": "http://mystic-mountains-1471.evr.cm",
    "internal": "http://192.168.1.123"
  },
  "formats": {
    "jpg": {
      "path": "/streaming/channels/1/picture"
    }
  },
  "auth": {
    "basic": {
      "username": "user1",
      "password": "1d3$35f2#2"
    }
  }
}
    </code></pre>
  </div>

  <div class="tab-pane" id="python">
    <pre><code class='python'>import evercam
evercam.Snapshot.get_snapshot('teststream')
    </code></pre>

    <h5>Example Response</h5>
    <pre><code class='json'>
&lt;evercam.Snapshot object&gt; JSON: {
  "uris":{
    "external": "http://mystic-mountains-1471.evr.cm",
    "internal": "http://192.168.1.123"
  },
  "formats": {
    "jpg": {
      "path": "/streaming/channels/1/picture"
    }
  },
  "auth": {
    "basic": {
      "username": "user1",
      "password": "1d3$35f2#2"
    }
  }
}
    </code></pre>
  </div>
</div>
